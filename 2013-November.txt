From taspring-linux-commit at lists.berlios.de  Sat Nov  2 18:24:22 2013
From: taspring-linux-commit at lists.berlios.de (taspring-linux-commit at lists.berlios.de)
Date: Sat,  2 Nov 2013 18:24:22 +0100 (CET)
Subject: [Taspring-linux-commit] r7658 - Lobby/TASClient
Message-ID: <mailman.710.1383413118.1457.taspring-linux-commit@lists.berlios.de>

Author: satirik
Date: 2013-11-02 18:24:22 +0100 (Sat, 02 Nov 2013)
New Revision: 7658

Modified:
   Lobby/TASClient/BattleFormUnit.dfm
   Lobby/TASClient/BattleFormUnit.pas
   Lobby/TASClient/ColorsPreferenceUnit.dfm
   Lobby/TASClient/ColorsPreferenceUnit.pas
   Lobby/TASClient/MainUnit.pas
   Lobby/TASClient/PreferencesFormUnit.pas
   Lobby/TASClient/TASClient.dof
   Lobby/TASClient/TASClient.res
Log:
* TrueSkill column added on spads server (patch from bibim)

Modified: Lobby/TASClient/BattleFormUnit.dfm
===================================================================
--- Lobby/TASClient/BattleFormUnit.dfm	2013-10-23 19:19:13 UTC (rev 7657)
+++ Lobby/TASClient/BattleFormUnit.dfm	2013-11-02 17:24:22 UTC (rev 7658)
@@ -1,6 +1,6 @@
 object BattleForm: TBattleForm
-  Left = 745
-  Top = 271
+  Left = 524
+  Top = 174
   Width = 923
   Height = 638
   Caption = 'Battle window'
@@ -25,15 +25,15 @@
   object SpTBXTitleBar1: TSpTBXTitleBar
     Left = 0
     Top = 0
-    Width = 915
-    Height = 611
+    Width = 907
+    Height = 600
     Caption = 'Battle window'
     Active = False
     object BattleMiddlePanel: TDockPanel
       Left = 0
       Top = 22
-      Width = 915
-      Height = 548
+      Width = 907
+      Height = 537
       Align = alClient
       DockSite = True
       TabOrder = 5
@@ -4587,15 +4587,15 @@
     end
     object Panel3: TSpTBXPanel
       Left = 0
-      Top = 570
-      Width = 915
+      Top = 559
+      Width = 907
       Height = 41
       Align = alBottom
       TabOrder = 1
       BorderType = pbrRaised
       TBXStyleBackground = True
       DesignSize = (
-        915
+        907
         41)
       object StartButton: TSpTBXButton
         Left = 128
@@ -4774,39 +4774,44 @@
             WideText = 'Player/Bot name'
           end
           item
+            Options = [coAllowClick, coDraggable, coEnabled, coParentBidiMode, coParentColor, coResizable, coShowDropMark, coAllowFocus]
+            Position = 1
+            WideText = 'Skill'
+          end
+          item
             Alignment = taCenter
-            Position = 1
+            Position = 2
             Width = 45
             WideText = 'Id'
           end
           item
             Alignment = taCenter
-            Position = 2
+            Position = 3
             Width = 45
             WideText = 'Team'
           end
           item
             Alignment = taCenter
-            Position = 3
+            Position = 4
             WideText = 'Ready'
           end
           item
-            Position = 4
+            Position = 5
             Width = 40
             WideText = 'Sync/Bot owner'
           end
           item
-            Position = 5
+            Position = 6
             Width = 60
             WideText = 'CPU/AI dll'
           end
           item
-            Position = 6
+            Position = 7
             Width = 66
             WideText = 'Player Bonus'
           end
           item
-            Position = 7
+            Position = 8
             Width = 10
             WideText = 'Order'
           end>
@@ -5120,17 +5125,17 @@
         end
         object SpTBXTabSheet5: TSpTBXTabSheet
           Left = 0
-          Top = 23
+          Top = 25
           Width = 267
-          Height = 203
+          Height = 201
           Caption = 'HeightMap'
           ImageIndex = -1
           TabItem = 'HeightMapTab'
           object HeightMapPanel: TSpTBXPanel
             Left = 2
             Top = 0
-            Width = 263
-            Height = 201
+            Width = 261
+            Height = 197
             Caption = 'HeightMapPanel'
             Align = alClient
             TabOrder = 0
@@ -8905,17 +8910,17 @@
         end
         object SpTBXTabSheet4: TSpTBXTabSheet
           Left = 0
-          Top = 23
+          Top = 25
           Width = 267
-          Height = 203
+          Height = 201
           Caption = 'RessourcesMap'
           ImageIndex = -1
           TabItem = 'RessourcesMapTab'
           object MetalMapPanel: TSpTBXPanel
             Left = 2
             Top = 0
-            Width = 263
-            Height = 201
+            Width = 261
+            Height = 197
             Caption = 'MetalMapPanel'
             Align = alClient
             TabOrder = 0
@@ -12690,25 +12695,25 @@
         end
         object SpTBXTabSheet3: TSpTBXTabSheet
           Left = 0
-          Top = 23
+          Top = 25
           Width = 267
-          Height = 203
+          Height = 201
           Caption = 'Minimap'
           ImageIndex = -1
           TabItem = 'MinimapTab'
           object MinimapPanel: TSpTBXPanel
             Left = 2
             Top = 0
-            Width = 263
-            Height = 201
+            Width = 261
+            Height = 197
             Align = alClient
             TabOrder = 0
             OnResize = MinimapPanelResize
             Borders = False
             TBXStyleBackground = True
             DesignSize = (
-              263
-              201)
+              261
+              197)
             object MapImage: TImageEx
               Left = 0
               Top = 0
@@ -13052,8 +13057,8 @@
           object QuickLookRichEdit: TRichEdit
             Left = 2
             Top = 0
-            Width = 413
-            Height = 232
+            Width = 411
+            Height = 230
             Align = alClient
             BorderStyle = bsNone
             Color = clBtnFace

Modified: Lobby/TASClient/BattleFormUnit.pas
===================================================================
--- Lobby/TASClient/BattleFormUnit.pas	2013-10-23 19:19:13 UTC (rev 7657)
+++ Lobby/TASClient/BattleFormUnit.pas	2013-11-02 17:24:22 UTC (rev 7658)
@@ -2048,6 +2048,7 @@
 { resets the battle screen: clears the clients list, enables/disables controls, ... }
 procedure TBattleForm.ResetBattleScreen;
 begin
+  BattleForm.VDTBattleClients.Header.Columns[1].Options := BattleForm.VDTBattleClients.Header.Columns[1].Options - [coVisible];
   BattleState.JoiningComplete := False;
   if IsBattleActive then
   begin
@@ -4121,13 +4122,14 @@
 begin
   case SortStyle of
     0: Result := CompareArgs([Client1.DisplayName],[Client2.DisplayName]);
-    1: Result := CompareArgs([-Client1.GetMode, Client1.GetTeamNo, Client1.DisplayName],[-Client2.GetMode, Client2.GetTeamNo, Client2.DisplayName]);
-    2: Result := CompareArgs([-Client1.GetMode, Client1.GetAllyNo, Client1.DisplayName],[-Client2.GetMode, Client2.GetAllyNo, Client2.DisplayName]);
-    3: Result := CompareArgs([-Client1.GetMode, Client1.GetReadyStatus, Client1.DisplayName],[-Client2.GetMode, Client2.GetReadyStatus, Client2.DisplayName]);
-    4: Result := CompareArgs([Client1.GetSync, Client1.DisplayName],[Client2.GetSync, Client2.DisplayName]);
-    5: Result := CompareArgs([Client1.CPU],[Client2.CPU]);
-    6: Result := CompareArgs([-Client1.GetMode, Client1.GetHandicap],[-Client2.GetMode, Client2.GetHandicap]);
-    7: Result := CompareArgs([BattleState.Battle.Clients.IndexOf(Client1)],[BattleState.Battle.Clients.IndexOf(Client2)]);
+    1: Result := CompareArgs([-Client1.GetMode, Client1.GetTeamNo, Client1.DisplayName],[-Client2.GetMode, Client2.GetTeamNo, Client2.DisplayName]); // Team Nbs are assigned in skill order
+    2: Result := CompareArgs([-Client1.GetMode, Client1.GetTeamNo, Client1.DisplayName],[-Client2.GetMode, Client2.GetTeamNo, Client2.DisplayName]);
+    3: Result := CompareArgs([-Client1.GetMode, Client1.GetAllyNo, Client1.DisplayName],[-Client2.GetMode, Client2.GetAllyNo, Client2.DisplayName]);
+    4: Result := CompareArgs([-Client1.GetMode, Client1.GetReadyStatus, Client1.DisplayName],[-Client2.GetMode, Client2.GetReadyStatus, Client2.DisplayName]);
+    5: Result := CompareArgs([Client1.GetSync, Client1.DisplayName],[Client2.GetSync, Client2.DisplayName]);
+    6: Result := CompareArgs([Client1.CPU],[Client2.CPU]);
+    7: Result := CompareArgs([-Client1.GetMode, Client1.GetHandicap],[-Client2.GetMode, Client2.GetHandicap]);
+    8: Result := CompareArgs([BattleState.Battle.Clients.IndexOf(Client1)],[BattleState.Battle.Clients.IndexOf(Client2)]);
   end;
 end;
 
@@ -4142,6 +4144,7 @@
         Result := -1
       else
         Result := 1;
+// Team Nbs are assigned in skill order
     1:
       if Bot1.GetTeamNo = Bot2.GetTeamNo then
         Result := 0
@@ -4150,6 +4153,13 @@
       else
         Result := 1;
     2:
+      if Bot1.GetTeamNo = Bot2.GetTeamNo then
+        Result := 0
+      else if Bot1.GetTeamNo < Bot2.GetTeamNo then
+        Result := -1
+      else
+        Result := 1;
+    3:
       if Bot1.GetAllyNo = Bot2.GetAllyNo then
         Result := 0
       else if Bot1.GetAllyNo < Bot2.GetAllyNo then
@@ -4301,6 +4311,7 @@
   hot: Boolean;
   hi: THitInfo;
   itemState: TSpTBXSkinStatesType;
+  SkillKey: string;
 begin
   Index := PaintInfo.Node.Index;
 
@@ -4489,10 +4500,45 @@
         end;
       end; // case WhatToDraw
 
-      1: // team
+      1: // skill
       case WhatToDraw of
         NormalClient:
         begin
+          SkillKey := 'game/players/' + LowerCase(TClient(BattleState.Battle.Clients[RealIndex]).Name) + '/skill';
+          if UnknownScriptTagList.CompleteKeyList.IndexOf(SkillKey) >= 0 then
+          begin
+            Canvas.Font.Color := MainUnit.Colors.SkillVeryHighUncertainty;
+            s := UnknownScriptTagList.ValueList[UnknownScriptTagList.CompleteKeyList.IndexOf(SkillKey)];
+            SkillKey := 'game/players/' + LowerCase(TClient(BattleState.Battle.Clients[RealIndex]).Name) + '/skilluncertainty';
+            if UnknownScriptTagList.CompleteKeyList.IndexOf(SkillKey) >= 0 then
+            begin
+              tmp := StrToInt(UnknownScriptTagList.ValueList[UnknownScriptTagList.CompleteKeyList.IndexOf(SkillKey)]);
+              if  tmp > 2 then
+                Canvas.Font.Color := MainUnit.Colors.SkillVeryHighUncertainty
+              else if tmp > 1 then
+                Canvas.Font.Color := MainUnit.Colors.SkillHighUncertainty
+              else if tmp > 0 then
+                Canvas.Font.Color := MainUnit.Colors.SkillAvgUncertainty
+              else
+                Canvas.Font.Color := MainUnit.Colors.SkillLowUncertainty;
+            end;
+            Canvas.TextOut(R.Left + Pos, R.Top, s);
+          end;
+        end;
+        NormalBot:
+        begin
+          // no need to draw this for bot
+        end;
+        OriginalClient:
+        begin
+//        we don't need to draw this
+        end;
+      end; // case WhatToDraw
+
+      2: // team
+      case WhatToDraw of
+        NormalClient:
+        begin
           if TClient(BattleState.Battle.Clients[RealIndex]).GetMode = 1 then
           begin
             s := IntToStr(TClient(BattleState.Battle.Clients[RealIndex]).GetTeamNo + 1);
@@ -4580,7 +4626,7 @@
         end
       end; // case WhatToDraw
 
-      2: // ally
+      3: // ally
       case WhatToDraw of
         NormalClient:
         begin
@@ -4608,7 +4654,7 @@
         end;
       end; // case WhatToDraw
 
-      3: // ready
+      4: // ready
       case WhatToDraw of
         NormalClient:
         begin
@@ -4629,7 +4675,7 @@
         end;
       end; // case WhatToDraw
 
-      4: // sync / bot owner
+      5: // sync / bot owner
       case WhatToDraw of
         NormalClient:
         begin
@@ -4648,7 +4694,7 @@
         end;
       end; // case WhatToDraw
 
-      5: // cpu / ai dll
+      6: // cpu / ai dll
       case WhatToDraw of
         NormalClient:
         begin
@@ -4669,7 +4715,7 @@
         end;
       end; // case WhatToDraw
 
-      6: // handicap
+      7: // handicap
       case WhatToDraw of
         NormalClient:
         begin
@@ -4687,7 +4733,7 @@
         end;
       end; // case WhatToDraw
 
-      7: // order
+      8: // order
       case WhatToDraw of
         NormalClient:
         begin

Modified: Lobby/TASClient/ColorsPreferenceUnit.dfm
===================================================================
--- Lobby/TASClient/ColorsPreferenceUnit.dfm	2013-10-23 19:19:13 UTC (rev 7657)
+++ Lobby/TASClient/ColorsPreferenceUnit.dfm	2013-11-02 17:24:22 UTC (rev 7658)
@@ -1,6 +1,6 @@
 object ColorsPreference: TColorsPreference
-  Left = 402
-  Top = 220
+  Left = 1155
+  Top = 606
   Width = 650
   Height = 465
   Caption = 'Color Preferences'
@@ -22,8 +22,8 @@
   object SpTBXTitleBar1: TSpTBXTitleBar
     Left = 0
     Top = 0
-    Width = 642
-    Height = 438
+    Width = 634
+    Height = 427
     Caption = 'Colors and Font Preference'
     Active = False
     FixedSize = True
@@ -604,6 +604,110 @@
         TabOrder = 20
         OnClick = SpTBXButton20Click
       end
+      object Panel20: TPanel
+        Left = 229
+        Top = 259
+        Width = 57
+        Height = 21
+        BevelOuter = bvNone
+        BorderStyle = bsSingle
+        Color = clBlack
+        TabOrder = 21
+      end
+      object SpTBXButton21: TSpTBXButton
+        Left = 288
+        Top = 259
+        Width = 25
+        Height = 20
+        Caption = '...'
+        TabOrder = 22
+        OnClick = SpTBXButton21Click
+      end
+      object SpTBXLabel21: TSpTBXLabel
+        Left = 16
+        Top = 260
+        Width = 153
+        Height = 13
+        Caption = 'TrueSkill Very High Uncertainty :'
+      end
+      object Panel21: TPanel
+        Left = 229
+        Top = 235
+        Width = 57
+        Height = 21
+        BevelOuter = bvNone
+        BorderStyle = bsSingle
+        Color = clBlack
+        TabOrder = 24
+      end
+      object SpTBXButton22: TSpTBXButton
+        Left = 288
+        Top = 235
+        Width = 25
+        Height = 20
+        Caption = '...'
+        TabOrder = 25
+        OnClick = SpTBXButton22Click
+      end
+      object SpTBXLabel22: TSpTBXLabel
+        Left = 16
+        Top = 236
+        Width = 129
+        Height = 13
+        Caption = 'TrueSkill High Uncertainty :'
+      end
+      object SpTBXLabel23: TSpTBXLabel
+        Left = 16
+        Top = 212
+        Width = 150
+        Height = 13
+        Caption = 'TrueSkill Average Uncertainty  :'
+      end
+      object Panel22: TPanel
+        Left = 229
+        Top = 211
+        Width = 57
+        Height = 21
+        BevelOuter = bvNone
+        BorderStyle = bsSingle
+        Color = clBlack
+        TabOrder = 28
+      end
+      object SpTBXButton23: TSpTBXButton
+        Left = 288
+        Top = 211
+        Width = 25
+        Height = 20
+        Caption = '...'
+        TabOrder = 29
+        OnClick = SpTBXButton23Click
+      end
+      object SpTBXButton24: TSpTBXButton
+        Left = 288
+        Top = 187
+        Width = 25
+        Height = 20
+        Caption = '...'
+        TabOrder = 30
+        OnClick = SpTBXButton24Click
+      end
+      object Panel23: TPanel
+        Left = 229
+        Top = 187
+        Width = 57
+        Height = 21
+        BevelOuter = bvNone
+        BorderStyle = bsSingle
+        Color = clBlack
+        TabOrder = 31
+      end
+      object SpTBXLabel24: TSpTBXLabel
+        Left = 16
+        Top = 188
+        Width = 127
+        Height = 13
+        Caption = 'TrueSkill Low Uncertainty :'
+      end
     end
     object SpTBXGroupBox3: TSpTBXGroupBox
       Left = 296

Modified: Lobby/TASClient/ColorsPreferenceUnit.pas
===================================================================
--- Lobby/TASClient/ColorsPreferenceUnit.pas	2013-10-23 19:19:13 UTC (rev 7657)
+++ Lobby/TASClient/ColorsPreferenceUnit.pas	2013-11-02 17:24:22 UTC (rev 7658)
@@ -87,6 +87,18 @@
     SpTBXLabel20: TSpTBXLabel;
     Panel19: TPanel;
     SpTBXButton20: TSpTBXButton;
+    Panel20: TPanel;
+    SpTBXButton21: TSpTBXButton;
+    SpTBXLabel21: TSpTBXLabel;
+    Panel21: TPanel;
+    SpTBXButton22: TSpTBXButton;
+    SpTBXLabel22: TSpTBXLabel;
+    SpTBXLabel23: TSpTBXLabel;
+    Panel22: TPanel;
+    SpTBXButton23: TSpTBXButton;
+    SpTBXButton24: TSpTBXButton;
+    Panel23: TPanel;
+    SpTBXLabel24: TSpTBXLabel;
     procedure FormCreate(Sender: TObject);
     procedure SpTBXButton0Click(Sender: TObject);
     procedure SpTBXButton1Click(Sender: TObject);
@@ -116,6 +128,10 @@
     procedure SpTBXItem2Click(Sender: TObject);
     procedure SpTBXButton19Click(Sender: TObject);
     procedure SpTBXButton20Click(Sender: TObject);
+    procedure SpTBXButton24Click(Sender: TObject);
+    procedure SpTBXButton23Click(Sender: TObject);
+    procedure SpTBXButton22Click(Sender: TObject);
+    procedure SpTBXButton21Click(Sender: TObject);
   protected
     mLocalFont: TFont;
   public
@@ -211,6 +227,10 @@
   Colors.BattleDetailsChanged := Panel17.Color;
   Colors.ClientIngame := Panel18.Color;
   Colors.ReplayWinningTeam := Panel19.Color;
+  Colors.SkillVeryHighUncertainty := Panel20.Color;
+  Colors.SkillHighUncertainty := Panel21.Color;
+  Colors.SkillAvgUncertainty := Panel22.Color;
+  Colors.SkillLowUncertainty := Panel23.Color;
 
   CommonFont.Assign(mLocalFont);
   ApplyFont;
@@ -310,6 +330,10 @@
   Panel17.Color := Colors.BattleDetailsChanged;
   Panel18.Color := Colors.ClientIngame;
   Panel19.Color := Colors.ReplayWinningTeam;
+  Panel20.Color := Colors.SkillVeryHighUncertainty;
+  Panel21.Color := Colors.SkillHighUncertainty;
+  Panel22.Color := Colors.SkillAvgUncertainty;
+  Panel23.Color := Colors.SkillLowUncertainty;
 
   mLocalFont.Assign(CommonFont);
   lblFontName.Caption := CommonFont.Name+'@'+IntToStr(CommonFont.Size);
@@ -367,6 +391,10 @@
     Ini.WriteInteger('TASClientColor','BattleDetailsChanged',Colors.BattleDetailsChanged);
     Ini.WriteInteger('TASClientColor','ClientIngame',Colors.ClientIngame);
     Ini.WriteInteger('TASClientColor','ReplayWinningTeam',Colors.ReplayWinningTeam);
+    Ini.WriteInteger('TASClientColor','SkillLowUncertainty',Colors.SkillLowUncertainty);
+    Ini.WriteInteger('TASClientColor','SkillAvgUncertainty',Colors.SkillAvgUncertainty);
+    Ini.WriteInteger('TASClientColor','SkillHighUncertainty',Colors.SkillHighUncertainty);
+    Ini.WriteInteger('TASClientColor','SkillVeryHighUncertainty',Colors.SkillVeryHighUncertainty);
     Ini.Free;
   except
     MessageDlg(_('An error occured while saving.'),mtError,[mbOK],0);
@@ -410,6 +438,10 @@
     Colors.BattleDetailsChanged := Ini.ReadInteger('TASClientColor','BattleDetailsChanged',Colors.BattleDetailsChanged);
     Colors.ClientIngame := Ini.ReadInteger('TASClientColor','ClientIngame',Colors.ClientIngame);
     Colors.ReplayWinningTeam := Ini.ReadInteger('TASClientColor','ReplayWinningTeam',Colors.ReplayWinningTeam);
+    Colors.SkillLowUncertainty := Ini.ReadInteger('TASClientColor','SkillLowUncertainty',Colors.SkillLowUncertainty);
+    Colors.SkillAvgUncertainty := Ini.ReadInteger('TASClientColor','SkillAvgUncertainty',Colors.SkillAvgUncertainty);
+    Colors.SkillHighUncertainty := Ini.ReadInteger('TASClientColor','SkillHighUncertainty',Colors.SkillHighUncertainty);
+    Colors.SkillVeryHighUncertainty := Ini.ReadInteger('TASClientColor','SkillVeryHighUncertainty',Colors.SkillVeryHighUncertainty);
     FormShow(nil);
     Ini.Free;
   except
@@ -439,6 +471,10 @@
   Panel17.Color := $00d85600;
   Panel18.Color := $009F1111;
   Panel19.Color := 12116153;
+  Panel20.Color := $00AAAAAA;
+  Panel21.Color := $00545454;
+  Panel22.Color := $00000000;
+  Panel23.Color := $0000A000;
 
   CommonFont.Name := 'Fixedsys';
   CommonFont.Size := 8;
@@ -467,6 +503,10 @@
   Panel17.Color := $00FFC5A1;
   Panel18.Color := $00D14D4D;
   Panel19.Color := 2900515;
+  Panel20.Color := $00384547;
+  Panel21.Color := $005C7478;
+  Panel22.Color := $00729EA6;
+  Panel23.Color := $0000A000;
 
   CommonFont.Name := 'Fixedsys';
   CommonFont.Size := 8;
@@ -483,4 +523,24 @@
   Panel19.Color := InputColor(_('Choose a color ...'),Panel19.Color);
 end;
 
+procedure TColorsPreference.SpTBXButton24Click(Sender: TObject);
+begin
+  Panel23.Color := InputColor(_('Choose a color ...'),Panel23.Color);
+end;
+
+procedure TColorsPreference.SpTBXButton23Click(Sender: TObject);
+begin
+  Panel22.Color := InputColor(_('Choose a color ...'),Panel22.Color);
+end;
+
+procedure TColorsPreference.SpTBXButton22Click(Sender: TObject);
+begin
+  Panel21.Color := InputColor(_('Choose a color ...'),Panel21.Color);
+end;
+
+procedure TColorsPreference.SpTBXButton21Click(Sender: TObject);
+begin
+  Panel20.Color := InputColor(_('Choose a color ...'),Panel20.Color);
+end;
+
 end.

Modified: Lobby/TASClient/MainUnit.pas
===================================================================
--- Lobby/TASClient/MainUnit.pas	2013-10-23 19:19:13 UTC (rev 7657)
+++ Lobby/TASClient/MainUnit.pas	2013-11-02 17:24:22 UTC (rev 7658)
@@ -382,6 +382,10 @@
     BattleDetailsChanged: TColor;
     ClientIngame: TColor;
     ReplayWinningTeam: TColor;
+    SkillLowUncertainty: TColor;
+    SkillAvgUncertainty: TColor;
+    SkillHighUncertainty: TColor;
+    SkillVeryHighUncertainty: TColor;
   end;
 
   TTeamColors = array[0..19] of TColor;
@@ -413,7 +417,7 @@
   );
 
 const
-  VERSION_NUMBER = '1.04'; // Must be float value! (with a period as a decimal seperator)
+  VERSION_NUMBER = '1.05'; // Must be float value! (with a period as a decimal seperator)
   PROGRAM_VERSION = 'TASClient ' + VERSION_NUMBER;
   KEEP_ALIVE_INTERVAL = 10000; // in milliseconds. Tells us what should be the maximum "silence" time before we send a ping to the server.
   ASSUME_TIMEOUT_INTERVAL = 30000; // in milliseconds. Must be greater than KEEP_ALIVE_INTERVAL! If server hasn't send any data to us within this interval, then we assume timeout occured. It's us who must make sure we get constant replies from server by pinging it.
@@ -1856,7 +1860,7 @@
     Key: Word; // unique ping packet ID (we use it to identify the packet so we don't mingle it with other ping packets if more were sent at the same time)
   end;
 var
-  Colors: TColors = (Normal:$00729EA6; Data: clGreen; Error:$003232C9; Info:$00FFC5A1; MinorInfo: $00D14D4D; ChanJoin: clGreen; ChanLeft: $00FFC5A1; MOTD: $0059597A; SayEx: $00855885; Topic: $0059597A; ClientAway: $00545454; MapModUnavailable: $00A8479F;BotText:$00808080; MyText: $00A2E0EB;AdminText: $00A9EBA2; OldMsgs: $00545454; BattleDetailsNonDefault: $00A8479F; BattleDetailsChanged: $00FFC5A1; ClientIngame: $00D14D4D; ReplayWinningTeam: 2900515 );
+  Colors: TColors = (Normal:$00729EA6; Data: clGreen; Error:$003232C9; Info:$00FFC5A1; MinorInfo: $00D14D4D; ChanJoin: clGreen; ChanLeft: $00FFC5A1; MOTD: $0059597A; SayEx: $00855885; Topic: $0059597A; ClientAway: $00545454; MapModUnavailable: $00A8479F;BotText:$00808080; MyText: $00A2E0EB;AdminText: $00A9EBA2; OldMsgs: $00545454; BattleDetailsNonDefault: $00A8479F; BattleDetailsChanged: $00FFC5A1; ClientIngame: $00D14D4D; ReplayWinningTeam: 2900515; SkillLowUncertainty: $0000A000; SkillAvgUncertainty: $00729EA6; SkillHighUncertainty: $005C7478; SkillVeryHighUncertainty: $00384547);
   Debug:
   record
     Enabled: Boolean; // show some debugging information
@@ -8103,6 +8107,7 @@
         Exit;
       end;
       sl3 := TStringList.Create;
+      tmpBool2 := False; // indicates if scripttags contain skill data
       for i:=0 to sl2.Count-1 do
       begin
         j := Pos('=',sl2[i]);
@@ -8158,7 +8163,11 @@
               BattleForm.ChangeScriptTagValue(Misc.JoinStringList(sl3,'/'),tmp2);
           end
           else
+          begin
             BattleForm.ChangeScriptTagValue(Misc.JoinStringList(sl3,'/'),tmp2);
+            if (sl3.Count = 4) and (sl3[0] = 'game') and (sl3[1] = 'players') and ((sl3[3] = 'skill') or (sl3[3] = 'skilluncertainty')) then
+              tmpBool2 := True; // scripttags contain skill data
+          end;
           BattleForm.QuickLookChangedTmr.Enabled := False;
           BattleForm.QuickLookChangedTmr.Interval := 3000;
           BattleForm.QuickLookChangedTmr.Enabled := True;
@@ -8173,6 +8182,11 @@
         BattleForm.RefreshQuickLookText;
         AllowBattleDetailsUpdate := True;
       end;
+      if tmpBool2 then
+      begin
+        BattleForm.VDTBattleClients.Header.Columns[1].Options := BattleForm.VDTBattleClients.Header.Columns[1].Options + [coVisible];
+        BattleForm.VDTBattleClients.Invalidate; // we need to reprint skill values if we receive new ones
+      end;
     end
     else if sl[0] = 'CLIENTBATTLESTATUS' then
     begin

Modified: Lobby/TASClient/PreferencesFormUnit.pas
===================================================================
--- Lobby/TASClient/PreferencesFormUnit.pas	2013-10-23 19:19:13 UTC (rev 7657)
+++ Lobby/TASClient/PreferencesFormUnit.pas	2013-11-02 17:24:22 UTC (rev 7658)
@@ -450,6 +450,10 @@
     try Colors.BattleDetailsChanged := Misc.GetRegistryData(HKEY_CURRENT_USER, TASCLIENT_REGISTRY_KEY+'\Preferences\OtherColors2', 'BattleDetailsChanged'); except end;
     try Colors.ClientIngame := Misc.GetRegistryData(HKEY_CURRENT_USER, TASCLIENT_REGISTRY_KEY+'\Preferences\OtherColors2', 'ClientIngame'); except end;
     try Colors.ReplayWinningTeam := Misc.GetRegistryData(HKEY_CURRENT_USER, TASCLIENT_REGISTRY_KEY+'\Preferences\OtherColors2', 'ReplayWinningTeam'); except end;
+    try Colors.SkillLowUncertainty := Misc.GetRegistryData(HKEY_CURRENT_USER, TASCLIENT_REGISTRY_KEY+'\Preferences\OtherColors2', 'SkillLowUncertainty'); except end;
+    try Colors.SkillAvgUncertainty := Misc.GetRegistryData(HKEY_CURRENT_USER, TASCLIENT_REGISTRY_KEY+'\Preferences\OtherColors2', 'SkillAvgUncertainty'); except end;
+    try Colors.SkillHighUncertainty := Misc.GetRegistryData(HKEY_CURRENT_USER, TASCLIENT_REGISTRY_KEY+'\Preferences\OtherColors2', 'SkillHighUncertainty'); except end;
+    try Colors.SkillVeryHighUncertainty := Misc.GetRegistryData(HKEY_CURRENT_USER, TASCLIENT_REGISTRY_KEY+'\Preferences\OtherColors2', 'SkillVeryHighUncertainty'); except end;
   except
   end;
 end;
@@ -859,6 +863,10 @@
     Misc.SetRegistryData(HKEY_CURRENT_USER, TASCLIENT_REGISTRY_KEY+'\Preferences\OtherColors2', 'BattleDetailsChanged', rdInteger, Colors.BattleDetailsChanged);
     Misc.SetRegistryData(HKEY_CURRENT_USER, TASCLIENT_REGISTRY_KEY+'\Preferences\OtherColors2', 'ClientIngame', rdInteger, Colors.ClientIngame);
     Misc.SetRegistryData(HKEY_CURRENT_USER, TASCLIENT_REGISTRY_KEY+'\Preferences\OtherColors2', 'ReplayWinningTeam', rdInteger, Colors.ReplayWinningTeam);
+    Misc.SetRegistryData(HKEY_CURRENT_USER, TASCLIENT_REGISTRY_KEY+'\Preferences\OtherColors2', 'SkillLowUncertainty', rdInteger, Colors.SkillLowUncertainty);
+    Misc.SetRegistryData(HKEY_CURRENT_USER, TASCLIENT_REGISTRY_KEY+'\Preferences\OtherColors2', 'SkillAvgUncertainty', rdInteger, Colors.SkillAvgUncertainty);
+    Misc.SetRegistryData(HKEY_CURRENT_USER, TASCLIENT_REGISTRY_KEY+'\Preferences\OtherColors2', 'SkillHighUncertainty', rdInteger, Colors.SkillHighUncertainty);
+    Misc.SetRegistryData(HKEY_CURRENT_USER, TASCLIENT_REGISTRY_KEY+'\Preferences\OtherColors2', 'SkillHighUncertainty', rdInteger, Colors.SkillHighUncertainty);
 
     Misc.SetRegistryData(HKEY_CURRENT_USER, TASCLIENT_REGISTRY_KEY+'\Forms\TemplateEditor', 'LayoutGlobal2', rdString, TemplateEditorForm.ProfileTemplate.Lines.Text);
     Misc.SetRegistryData(HKEY_CURRENT_USER, TASCLIENT_REGISTRY_KEY+'\Forms\TemplateEditor', 'LayoutProperty2', rdString, TemplateEditorForm.LayoutPropertyChange.Lines.Text);

Modified: Lobby/TASClient/TASClient.dof
===================================================================
--- Lobby/TASClient/TASClient.dof	2013-10-23 19:19:13 UTC (rev 7657)
+++ Lobby/TASClient/TASClient.dof	2013-11-02 17:24:22 UTC (rev 7658)
@@ -113,9 +113,9 @@
 IncludeVerInfo=1
 AutoIncBuild=1
 MajorVer=1
-MinorVer=4
+MinorVer=5
 Release=0
-Build=1395
+Build=1403
 Debug=0
 PreRelease=0
 Special=0
@@ -126,7 +126,7 @@
 [Version Info Keys]
 CompanyName=
 FileDescription=TASClient
-FileVersion=1.4.0.1395
+FileVersion=1.5.0.1403
 InternalName=
 LegalCopyright=
 LegalTrademarks=

Modified: Lobby/TASClient/TASClient.res
===================================================================
(Binary files differ)


